@page
@model CS3750Assignment1.Pages.Assignments.IndexModel

@{
    ViewData["Title"] = "Assignments";
}
<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        var assignmentScoreDataArray = @Html.Raw(Json.Serialize(Model.SubmittedAssignmentData));

        assignmentScoreDataArray.forEach(function(currentValue)
        {
            try
            {
                if (currentValue != null)
                {
                    //console.log(currentValue);
                    google.charts.load("current", {packages:['corechart']});
                    google.charts.setOnLoadCallback(drawChart);
                    function drawChart() {
                        var data = google.visualization.arrayToDataTable([
                            ["Data Point", "Score", {role: 'style'}],
                            ["Low Score", currentValue.assignLow, 'red'],
                            ["High Score", currentValue.assignHigh, 'green'],
                            ["Mean Score", currentValue.assignMean, 'grey'],
                            ["Your Score", currentValue.assignPoints, 'blue']
                        ]);


                        var options = {
                            title: "Assignment Data - " + currentValue.assignTitle,
                            width: 600,
                            height: 300,
                            bar: {groupWidth: "90%"},
                            legend: { position: "none" },
                        };
                        let chartDivID = currentValue.id.toString();
                        var chart = new google.visualization.ColumnChart(document.getElementById(chartDivID));
                        chart.draw(data, options);
                    }
                }

            } catch (error)
            {
                console.error("Something went wrong: " + error.message);

            }

        });
    </script>
    <script type="text/javascript">
        google.charts.load("current", {packages:['corechart']});
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {

            var data = google.visualization.arrayToDataTable([
            ["Data Point", "Grade", {role: 'style'}],
            ["Low Grade", @Model.CourseLow, 'red'],
            ["High Grade", @Model.CourseHigh, 'green'],
            ["Mean Grade", @Model.CourseAverage, 'grey'],
            ["Your Grade", @Model.CourseGrade, 'blue']
            ]);

            var options = {
            title: "Course Grade Data",
            width: 600,
            height: 300,
            bar: {groupWidth: "90%"},
            legend: { position: "none" },
            };

            var chart = new google.visualization.ColumnChart(document.getElementById("GradeChart"));
            chart.draw(data, options);
        }
    </script>

    
</head>

@if (!Model.IsInstructor)
{
    

    <h3>Course Grade: @Model.CourseGrade - @Model.letterGrade</h3>
    <h4>Overall Score: @Model.studentFinalGrade / @Model.possibleTotalGrade<br/><br/></h4>
    <div id="GradeChart"></div>
}

<h1>Assignments</h1>

@if (!Model.Assignments.Any())
{
    <p class="text-muted">No assignments due.</p>
}

@if (Model.IsInstructor)
{
    <p>
        <a asp-page="Create" class="btn btn-primary">Create New Assignment</a>
    </p>
}

@if (!Model.IsInstructor)
{
    <h3>Unsubmitted</h3>
}

@if(Model.Assignments.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Max Points</th>
                <th>Due Date</th>
                <th>Due Time</th>
                <th>Accepted File Types</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Assignments)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td> 
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.MaxPoints)</td>
                    <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.DueTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.AcceptedFileTypes)</td>
                    <td>
                        @if (Model.IsInstructor)
                        {
                            <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                            <a asp-page="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                           <!-- Added for individual assignment functionality--> <a asp-page="/ViewSubmissions" asp-route-courseId="@Model.CourseID" asp-route-assignId="@item.Id" class="btn btn-info">
                                View Submissions
                            </a>
                        }
                        else
                        {
                            <a asp-page="SubmitAssignment" asp-route-assignmentId="@item.Id" class="btn btn-success btn-sm">Submit Assignment</a>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
   
    /*@if (Model.IsInstructor)
    {
        <div class="mt-3">
            <a asp-page="/ViewSubmissions" asp-route-courseId="@Model.CourseID" class="btn btn-info">
                View Submissions
            </a>
        </div>
    }*/

}

@if (!Model.IsInstructor)
{
    <h3>Completed</h3>
}

@if (Model.SubmittedAssignments.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Points Earned</th>
                <th>Max Points</th>
                <th>Date Submitted</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SubmittedAssignments)
            {
                
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>
                        @if (item.EarnedPoints != null)
                        {
                            @Html.DisplayFor(modelItem => item.EarnedPoints)
                        }
                        else
                        {
                            <label>-----</label>
                        }
                     </td>
                    <td>@Html.DisplayFor(modelItem => item.MaxPoints)</td>
                    <td>@Html.DisplayFor(modelItem => item.SubmittedAt)</td>
                    
                    @*add bar graph here with the following:
                        Assignment low score
                        Assignment mean score
                        Assignment high score
                        Assignment student score
                    *@
                </tr>
                <tr>
                    <td colspan="5">
                        <div id="@item.AssignmentID">ASSIGNMENT DATA UNAVAILABLE</div>
                    </td>
                </tr>
            }
        </tbody>
    </table>


}