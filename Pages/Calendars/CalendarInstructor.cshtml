@page
@model CS3750Assignment1.Pages.Calendars.CalendarInstructorModel

@{
    ViewData["Title"] = "Instructor Calendar";
}
<head>
    <meta charset='utf-8' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function() {
          var calendarEl = document.getElementById('calendar');

          var courses = @Html.Raw(Json.Serialize(Model.InstructorCourses));
          var courseEvents = [];

          //console.log(courses.length);
          for(var x = 0; x < courses.length; x++)
          {
              //console.log(courses[x].meetingTime[0], " ", courses[x].meetingTime[1]);
              var classStart = courses[x].meetingTime[0];
              var classEnd = courses[x].meetingTime[1];

              //console.log(courses[x].courseName, " ", classStart, " ", classEnd);
              courses[x].meetingDays.forEach(function(day)
              {
                  var weekDay = mapDayToWeekday(day);
                  courseEvents.push(
                  {
                      title: courses[x].courseName,
                      daysOfWeek: [weekDay],
                      startTime: classStart,
                      endTime: classEnd,
                      rrule:
                      {
                          freq: 'weekly',
                          byweekday: [weekDay],
                          interval: 1
                      }
                  });
              });


          };




          var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            events: courseEvents
          });
          calendar.render();
        });

        







        //little function to map days of the week to numbers for FullCalendar
        function mapDayToWeekday(day) {
          const dayMap = {
            'Sunday': 0,
            'Monday': 1,
            'Tuesday': 2,
            'Wednesday': 3,
            'Thursday': 4,
            'Friday': 5,
            'Saturday': 6
          };
          return dayMap[day];
        }

    </script>
</head>

<body>
    <h1>Calendar</h1>

    <div id='calendar'></div>
</body>

@*
<!--https://stackoverflow.com/questions/63197868/razor-pages-asp-net-core-install-fullcalendar      <-for putting the calendar in            

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].Account)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].CourseNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].Credits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].Capacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].MeetingDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].MeetingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course[0].Location)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Course) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Account.AccountRole)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Credits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MeetingDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MeetingTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> -->*@
