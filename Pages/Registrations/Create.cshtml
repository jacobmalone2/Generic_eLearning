@page
@model CS3750Assignment1.Pages.Registrations.CreateModel

@{
    ViewData["Title"] = "Register";
}
        
<h1>Register</h1>
        
<h4>Registration</h4>
<hr/>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].CourseNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Credits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Capacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].MeetingDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].MeetingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Location)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Courses)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Credits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetingDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetingTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @if (Model.IsRegistered(item.Id))
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Id">Drop</a>
                    }
                    else
                    {
                        <div class="form-group">
                            <form method="post" asp-page-handler="Submit" asp-route-id=@item.Id>
                                <input type="submit" value="Register" class="btn btn-primary" />
                            </form>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@*
<div class="row">
    <div class="col-md-4">
        <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="Registration.CourseID" class="control-label"></label>
                <input asp-for="Registration.CourseID" class="form-control" />
                <span asp-validation-for="Registration.CourseID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="Registration.StudentID" class="control-label"></label>
                <input asp-for="Registration.StudentID" class="form-control" />
                <span asp-validation-for="Registration.StudentID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

*@
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
