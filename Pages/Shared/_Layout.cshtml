@{
    // Link Url Redirects
    string homePage = ""; // Default home page
    string classManagementURL, calendarURL = "";

    // Link Displays
    string userClassDisplay = "";

    var isLoggedIn = Context.Request.Cookies["LoggedUserID"] != null;
    var userRole = Context.Request.Cookies["LoggedUserRole"]; // Get role from cookies

    // Generate redirects and displays based on user role.

    if (userRole == "Instructor")
    {
        homePage = "/Courses/Index";
        calendarURL = "/Calendars/CalendarInstructor";
        classManagementURL = "/Courses/Create";
        userClassDisplay = "Create a Course";
    }
    else
    {
        homePage = "/Registrations/Index";
        calendarURL = "/Calendars/CalendarStudent";
        classManagementURL = "/Registrations/Create";
        userClassDisplay = "Register for Classes";
    }

    // Leaving it here incase we do need to bring back the welcome pages as the home page.
    // As of writing this, the professor did not care for having a welcome screen. We should redirect the user to their list of classes
    // upon login instead of showing a welcome page.
    /*
    if (userRole == "Student")
    {
        homePage = "/WelcomeStudent"; // Redirect students to student dashboard
                                      //classURL = "/Regisrations/Index";
    }
    else if (userRole == "Instructor")
    {
        homePage = "/WelcomeInstructor"; // Redirect instructors to instructor dashboard
                                         //classURL = "/Courses/Index";
    }
    */



    // Detect if the user is on the login or signup page
    var currentPath = Context.Request.Path.Value?.ToLower() ?? "";
    var isAuthPage = currentPath == "/" || currentPath.Contains("index") || currentPath.Contains("signup2");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - KJCJK Group Project</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/CS3750Assignment1.styles.css" asp-append-version="true" />
</head>

@using Microsoft.AspNetCore.Http;

<body>
    <header>
        @if (!isAuthPage && isLoggedIn) // Hide navbar if on login or signup page
        {
            <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container">
                    <a class="navbar-brand" asp-area="" asp-page="@homePage">KJCJK Project</a>

                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between" id="navbarNav">
                        <ul class="navbar-nav flex-grow-1">
                            <!--I think having the home button is reduntant since the KJCJK button already links to home.-->
                            @* <li class="nav-item"> 
                                <a class="nav-link text-dark" asp-page="@homePage">Home</a> <!-- Dynamic Home Button -->
                            </li> *@
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-page="@classManagementURL">@userClassDisplay</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-page="/Tuition">Tuition</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-page="@calendarURL">Calendar</a>
                            </li>
                        </ul>

                        <!-- Profile Icon and Dropdown Menu -->
                        <ul class="navbar-nav ms-auto">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <img src="~/images/profile-icon.png" alt="User" class="rounded-circle" width="32" height="32">
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                    <li><a class="dropdown-item" asp-page="/Profile" asp-route-id="@Context.Request.Cookies["LoggedUserID"]">Profile</a></li>
                                    <li><a class="dropdown-item" asp-page="/Settings">Settings</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-page="/Index">Logout</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        }
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - CS3750Assignment1 - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
